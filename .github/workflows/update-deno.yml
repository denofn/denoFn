name: Update Deno

on:
  schedule:
    - cron: "0 */4 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: oprypin/find-latest-tag@v1
        id: denoVersion
        with:
          repository: denoland/deno
          prefix: v

      - uses: oprypin/find-latest-tag@v1
        id: stdVersion
        with:
          repository: denoland/deno
          prefix: std/

      - uses: actions/checkout@v2

      - name: updates Deno version
        run: |
          echo "${{ steps.denoVersion.outputs.tag }}" | cut -d'v' -f 2 > DENO_VERSION

      - uses: denolib/setup-deno@v2
        with:
          deno-version: ${{ steps.denoVersion.outputs.tag }}

      - name: update std
        run: |
          deno run --allow-read --allow-write ./packages/scripts/updateStd.ts ${{ steps.stdVersion.outputs.tag }}
          ./denofn.sh cache update

      - name: Run tests
        run: |
          ./denofn.sh cache reload
          ./denofn.sh test

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update Deno version to ${{ steps.denoVersion.outputs.tag }}
          committer: Github <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          title: Update Deno version to ${{ steps.denoVersion.outputs.tag }}
          body: |
            Deno updated to version ${{ steps.denoVersion.outputs.tag }}
          labels: automated pr
          draft: false
          branch: bump-deno-${{ steps.denoVersion.outputs.tag }}
          request-to-parent: false

      - name: Check outputs
        run: |
          echo "Deno version is ${{ steps.denoVersion.outputs.tag }}"
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
